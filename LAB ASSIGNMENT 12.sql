CREATE TABLE EMP(EMPNO INT,ENAME VARCHAR(200),JOB VARCHAR(100),SALARY NUMBER,COMMISSION NUMBER,DEPTNO INT,CONSTRAINT PK PRIMARY KEY(DEPTNO));
CREATE TABLE DEPT(
    DEPTNO INT,
    DNAME VARCHAR(200)
);

INSERT INTO EMP VALUES(1,'ABC','XYZ',9000,500,10);
INSERT INTO EMP VALUES(2,'DEF','UVW',50000,650,20);
INSERT INTO EMP VALUES(3,'GHI','RST',7250,600,30);
INSERT INTO EMP VALUES(4,'JKL','BGF',41000,900,10);
INSERT INTO EMP VALUES(5,'MNO','LMN',9100,480,20);
INSERT INTO EMP VALUES(6,'PQR','KAW',60000,726,30);

INSERT INTO DEPT VALUES(10,'QWERTYU');
INSERT INTO DEPT VALUES(20,'ZXCVBN');
INSERT INTO DEPT VALUES(30,'ASDFGH');
-- SELECT * FROM EMP;
CREATE TABLE EMP_OLD AS SELECT * FROM EMP WHERE 1=0;


Q1.
CREATE OR REPLACE TRIGGER DELEMP
BEFORE DELETE ON EMP
FOR EACH ROW
BEGIN
INSERT INTO EMP_OLD VALUES(:OLD.EMPNO,:OLD.ENAME,:OLD.JOB,:OLD.SALARY,:OLD.COMMISSION,:OLD.DEPTNO);
END;
/

ALTER TABLE DEPT ADD CONSTRAINT PK PRIMARY KEY(DEPTNO);
ALTER TABLE EMP ADD CONSTRAINT FK FOREIGN KEY(DEPTNO) REFERENCES DEPT(DEPTNO);
DELETE FROM EMP WHERE EMPNO=3;
SELECT * FROM EMP_OLD;
SELECT * FROM EMP;

Q2.
CREATE OR REPLACE TRIGGER ASALVER
BEFORE INSERT ON EMP
FOR EACH ROW
DECLARE
    EX1 EXCEPTION;
BEGIN
    IF :NEW.SALARY<250000 THEN
    	RAISE EX1;
    END IF;
EXCEPTION
WHEN EX1 THEN
	DBMS_OUTPUT.PUT_LINE('TOO GAREEB');
END;
/

INSERT INTO EMP VALUES(9,'QWSDFVGBN','XYZ',20000,875,20);

Q3.
CREATE OR REPLACE TRIGGER ASALVER
BEFORE UPDATE OF SALARY ON EMP
FOR EACH ROW
DECLARE
    EX1 EXCEPTION;
BEGIN
    IF :NEW.SALARY<:OLD.SALARY THEN
    	RAISE EX1;
    END IF;
EXCEPTION
WHEN EX1 THEN
	DBMS_OUTPUT.PUT_LINE('PAAPI PET KA SAWAL HAI');
END;
/

UPDATE EMP SET SALARY=1000 WHERE EMPNO=2;

Q4.
CREATE OR REPLACE TRIGGER ASALVERSTAT
BEFORE UPDATE OF SALARY ON EMP
DECLARE
    EX1 EXCEPTION;
BEGIN
    FOR rowV IN (SELECT SALARY FROM EMP) LOOP
        IF ROWV.SALARY < 25000000 THEN
            RAISE EX1;
        END IF;
    END LOOP;
EXCEPTION
    WHEN EX1 THEN
        DBMS_OUTPUT.PUT_LINE('PAAPI PET KA SAWAL HAI');
END;
/
    
UPDATE EMP SET SALARY=1000 WHERE EMPNO=2;

Q5.
CREATE OR REPLACE TRIGGER CAPS
BEFORE INSERT OR UPDATE OF ENAME ON EMP
FOR EACH ROW
BEGIN
	:NEW.ENAME:=UPPER(:NEW.ENAME);
END;
/

INSERT INTO EMP VALUES(9,'qwertyuio','XYZ',20000,875,20);
UPDATE EMP SET ENAME='qwsdcvbnj' WHERE EMPNO=2;

SELECT * FROM EMP;

Q6.
CREATE OR REPLACE TRIGGER DISP
AFTER UPDATE OF ENAME ON EMP
FOR EACH ROW
BEGIN
	DBMS_OUTPUT.PUT_LINE('OLD: '||:OLD.ENAME||' NEW: '||:NEW.ENAME);
END;
/
UPDATE EMP SET ENAME='asdfghjiolkjh' WHERE EMPNO=2;

Q7.
CREATE OR REPLACE TRIGGER COMSAL
BEFORE INSERT OR UPDATE ON EMP
FOR EACH ROW
DECLARE 
    EX1 EXCEPTION;
BEGIN
	IF :NEW.COMMISSION>:NEW.SALARY THEN
		RAISE EX1;
	END IF;
EXCEPTION
    WHEN EX1 THEN
    	RAISE_APPLICATION_ERROR(-20001, 'Commission cannot be greater than salary.');
END;
/

INSERT INTO EMP VALUES(29,'wertyuikjh','XYZ',20,875,20);
-- UPDATE EMP SET SALARY=200 WHERE EMPNO=4;

SELECT * FROM EMP;

Q9.
CREATE OR REPLACE TRIGGER enforce_eno_primary_key
BEFORE INSERT OR UPDATE OF EMPNO ON EMP
FOR EACH ROW
DECLARE
    duplicate_eno EXCEPTION;
	PRAGMA EXCEPTION_INIT(duplicate_eno, -20001);
	NULLVAL EXCEPTION;
	PRAGMA EXCEPTION_INIT(NULLVAL,-20002);
	ENO_COUNT NUMBER;
BEGIN

    SELECT COUNT(*) INTO ENO_COUNT FROM EMP WHERE EMPNO=:NEW.EMPNO;
    -- Check if the new value of ENO already exists in the table
    IF :NEW.EMPNO IS NOT NULL THEN
        IF (INSERTING OR :NEW.EMPNO != :OLD.EMPNO) AND
           ENO_COUNT>0 THEN
            RAISE duplicate_eno;
        END IF;
	ELSE
        RAISE NULLVAL;
    END IF;
EXCEPTION
    WHEN duplicate_eno THEN
       DBMS_OUTPUT.PUT_LINE('BHAK CHINA KA MAAL');
	WHEN NULLVAL THEN
       DBMS_OUTPUT.PUT_LINE('BHAK NULLE');
END;
/
INSERT INTO EMP VALUES(1,'ASDFGTHYJK','BGH',500,500,20);
INSERT INTO EMP VALUES(NULL,'ASDFGTHYJK','BGH',500,500,20);


Q10.
CREATE OR REPLACE TRIGGER enforce_deptno_foreign_key
BEFORE INSERT OR UPDATE OF DEPTNO ON EMP
FOR EACH ROW
DECLARE
    invalid_deptno EXCEPTION;
    PRAGMA EXCEPTION_INIT(invalid_deptno, -20001);
    dept_exists NUMBER;
BEGIN
    -- Check if the DEPTNO exists in the DEPT table
    SELECT COUNT(*)
    INTO dept_exists
    FROM DEPT
    WHERE DEPTNO = :NEW.DEPTNO;

    -- If DEPTNO does not exist in DEPT table, raise an error
    IF dept_exists = 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'DEPTNO does not exist in the DEPT table.');
    END IF;
END;
/
INSERT INTO EMP VALUES(NULL,'ASDFGTHYJK','BGH',500,500,50);


--DELETION KE AGAINST
CREATE OR REPLACE TRIGGER enforce_deptno_foreign_key_DELETE
BEFORE DELETE ON DEPT
FOR EACH ROW
DECLARE
    invalid_deptno EXCEPTION;
    PRAGMA EXCEPTION_INIT(invalid_deptno, -20001);
    dept_exists NUMBER;
BEGIN
    -- Check if the DEPTNO exists in the DEPT table
    SELECT COUNT(*)
    INTO dept_exists
    FROM EMP
    WHERE DEPTNO = :OLD.DEPTNO;

    -- If DEPTNO does not exist in DEPT table, raise an error
    IF dept_exists>0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'DEPTNO exists in the EMP table.');
    END IF;
END;
/
DELETE FROM DEPT WHERE DEPTNO=10;